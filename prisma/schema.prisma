generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Model Admin
model Admin {
  id             Int      @id @default(autoincrement())
  nama           String
  email          String   @unique
  kataSandi      String
  
  // Relasi
  pembayaranVerifikasi Pembayaran[] @relation("VerifikasiPembayaran")
}

// Model Pengguna
model Pengguna {
  id         Int      @id @default(autoincrement())
  nama       String
  email      String   @unique
  googleId   String   @unique
  
  // Relasi
  pesanan    Pesanan[]
}

// Model Layanan
model Layanan {
  id          Int      @id @default(autoincrement())
  nama        String
  deskripsi   String?
  harga       Decimal? @db.Decimal(12, 2)
  
  // Relasi
  pesanan     Pesanan[]
}

// Model Pesanan
model Pesanan {
  id               Int           @id @default(autoincrement())
  pengguna         Pengguna?     @relation(fields: [penggunaId], references: [id], onDelete: Cascade)
  penggunaId       Int?
  namaPelanggan    String
  layanan          Layanan?      @relation(fields: [layananId], references: [id])
  layananId        Int?
  hargaDisepakati  Decimal?      @db.Decimal(12, 2)
  nomorHp          String
  status           StatusPesanan @default(PENGAJUAN)
  lokasi           String?
  catatan          String?
  catatanAdmin     String?
  dibuatPada       DateTime      @default(now())
  diperbaruiPada   DateTime      @updatedAt
  
  // Relasi
  pembayaran       Pembayaran?
}

// Model Pembayaran
model Pembayaran {
  id                  Int              @id @default(autoincrement())
  pesanan             Pesanan          @relation(fields: [pesananId], references: [id], onDelete: Cascade)
  pesananId           Int              @unique
  jumlah              Decimal          @db.Decimal(12, 2)
  metodePembayaran    String?
  buktiPembayaran     String?
  statusPembayaran    StatusBayar      @default(BELUM_BAYAR)
  tanggalBayar        DateTime?
  diverifikasiOleh    Admin?           @relation("VerifikasiPembayaran", fields: [diverifikasiOlehId], references: [id])
  diverifikasiOlehId  Int?
  tanggalVerifikasi   DateTime?
  alasanPenolakan     String?
  dibuatPada          DateTime         @default(now())
  diperbaruiPada      DateTime         @updatedAt
}

// Enum Status Pesanan
enum StatusPesanan {
  PENGAJUAN
  DITERIMA
  DITOLAK
  PROSES_PEMBANGUNAN
  SELESAI
}

// Enum Status Pembayaran
enum StatusBayar {
  BELUM_BAYAR
  MENUNGGU_VERIFIKASI
  DIVERIFIKASI
  DITOLAK
}