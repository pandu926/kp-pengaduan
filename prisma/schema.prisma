generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id             Int      @id @default(autoincrement())      // ID Admin
  nama           String                                       // Nama Admin
  email          String   @unique                            // Email Admin
  kataSandi      String                                       // Kata sandi yang di-hash
  dibuatPada     DateTime @default(now())                    // Tanggal dibuat
}

model Pengguna {
  id         Int      @id @default(autoincrement())          // ID Pengguna
  nama       String
  email      String   @unique                                // Email pengguna
  googleId   String   @unique                                // ID Google OAuth
  dibuatPada DateTime @default(now())                        // Tanggal dibuat

  pesanan    Pesanan[]                                        // Relasi ke pesanan
}

model Layanan {
  id          Int      @id @default(autoincrement())          // ID Layanan
  nama        String                                           // Nama layanan
  deskripsi   String?                                          // Deskripsi layanan        
  dibuatPada  DateTime @default(now())                        // Tanggal dibuat
  pesanan     Pesanan[]                                        // Relasi ke pesanan
}

model Pesanan {
  id               Int           @id @default(autoincrement())       // ID Pesanan
  pengguna         Pengguna?      @relation(fields: [penggunaId], references: [id], onDelete: Cascade)
  namaPelanggan    String        @default("tes")
  penggunaId       Int?                                            // ID pengguna pemesan
  layanan          Layanan?      @relation(fields: [layananId], references: [id])
  layananId        Int?                                            // Layanan yang dipilih
  hargaDisepakati  Decimal?                                        // Harga yang disepakati
  tanggalPesan     DateTime                                         // Tanggal pemesanan
  nomerHp          String
  status           StatusPesanan @default(PENGAJUAN)                 // Status pesanan
  lokasi           String?                                          // Lokasi proyek
  catatan          String?                                          // Catatan tambahan
  dibuatPada       DateTime      @default(now())                    // Tanggal dibuat
  progres          ProgresPesanan[]                                // Relasi progres pesanan
}

model ProgresPesanan {
  id               Int      @id @default(autoincrement())           // ID progres
  pesanan          Pesanan  @relation(fields: [pesananId], references: [id], onDelete: Cascade)
  pesananId        Int                                           // Pesanan terkait
  keterangan       String?                                       // Penjelasan progres
  persenProgres    Int                                           // Persentase pengerjaan
  urlDokumentasi   String?                                       // Gambar dokumentasi
  diperbaruiPada   DateTime @default(now())                      // Tanggal diperbarui
}



enum StatusPesanan {
  PENGAJUAN
  SURVEI
  PENGERJAAN
  SELESAI
  DIBATALKAN
}
